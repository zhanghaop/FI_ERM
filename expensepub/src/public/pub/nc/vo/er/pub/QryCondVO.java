package nc.vo.er.pub;

/***************************************************************\
 *     The skeleton of this class is generated by an automatic *
 * code generator for NC product.                              *
\***************************************************************/

import java.util.ArrayList;

import nc.vo.pub.NullFieldException;
import nc.vo.pub.ValidationException;
import nc.vo.pub.ValueObject;

/**
 * 查询条件VO
结构：[查询字段、字段类型编码、字段来源标志、逻辑符、值]

字段类型编码包括：数字型、字符型、日期型、期间型、布尔型；
逻辑符包括<、>、>=、<=、=、<>;
字段来源标志用以区分查询字段所从属的表信息。

 *
 * 创建日期：(2001-5-17)
 * @author：宋涛
 */
public class QryCondVO extends ValueObject implements PubConstData{

	/**
	 * 
	 */
	private static final long serialVersionUID = 470705833828828242L;
	public String m_qryfld;//查询字段
	public Integer m_fldtype = new Integer(STRING);//字段类型编码
	public String m_fldorigin;//字段来源标志
	public String m_boolopr;//逻辑符
	public String m_value;//值
	private Object m_ObjValues;//可以用来传递值的集合，从而传递多个值

/**
 * 使用主键字段进行初始化的构造子。
 *
 * 创建日期：(2001-5-17)
 */
public QryCondVO() {

}
/**
 * 根类Object的方法,克隆这个VO对象。
 *
 * 创建日期：(2001-5-17)
 */
public Object clone() {

	// 复制基类内容并创建新的VO对象：
	Object o = null;
	try {
		o = super.clone();
	} catch (Exception e) {}
	QryCondVO qryCond = (QryCondVO)o;

	// 你在下面复制本VO对象的所有属性：

	qryCond.setQryfld(m_qryfld);//查询字段
	qryCond.setFldtype(m_fldtype);//字段类型编码
	qryCond.setFldorigin(m_fldorigin);//字段来源标志
	qryCond.setBoolopr(m_boolopr);//逻辑符
	qryCond.setValue(m_value);//值
	qryCond.setObjValues(m_ObjValues);//可以用来传递值的集合，从而传递多个值

	return qryCond;
}
/**
 * 属性m_boolopr的Getter方法。
 *
 * 创建日期：(2001-5-17)
 * @return String
 */
public String getBoolopr() {
	return m_boolopr;
}

/**
 * 返回数值对象的显示名称。
 *
 * 创建日期：(2001-5-17)
 * @return java.lang.String 返回数值对象的显示名称。
 */
public String getEntityName() {

	return "QryCond";
}

/**
 * 属性m_fldorigin的Getter方法。
 *
 * 创建日期：(2001-5-17)
 * @return String
 */
public String getFldorigin() {
	return m_fldorigin;
}

/**
 * 属性m_fldtype的Getter方法。
 *
 * 创建日期：(2001-5-17)
 * @return Integer
 */
public Integer getFldtype() {
	return m_fldtype;
}

	public Object getObjValues(){
		return m_ObjValues;
		}
/**
 * 属性m_qryfld的Getter方法。
 *
 * 创建日期：(2001-5-17)
 * @return String
 */
public String getQryfld() {
	return m_qryfld;
}

/**
 * 属性m_value的Getter方法。
 *
 * 创建日期：(2001-5-17)
 * @return String
 */
public String getValue() {
	return m_value;
}

/**
 * 属性m_boolopr的setter方法。
 *
 * 创建日期：(2001-5-17)
 * @param newM_boolopr String
 */
public void setBoolopr(String newBoolopr) {

	m_boolopr = newBoolopr;
}
/**
 * 属性m_fldorigin的setter方法。
 *
 * 创建日期：(2001-5-17)
 * @param newM_fldorigin String
 */
public void setFldorigin(String newFldorigin) {

	m_fldorigin = newFldorigin;
}
/**
 * 属性m_fldtype的setter方法。
 *
 * 创建日期：(2001-5-17)
 * @param newM_fldtype Integer
 */
public void setFldtype(Integer newFldtype) {

	m_fldtype = newFldtype;
}
	public void setObjValues(Object obj){
		m_ObjValues = obj;
		}
/**
 * 属性m_qryfld的setter方法。
 *
 * 创建日期：(2001-5-17)
 * @param newM_qryfld String
 */
public void setQryfld(String newQryfld) {

	m_qryfld = newQryfld;
}
/**
 * 属性m_value的setter方法。
 *
 * 创建日期：(2001-5-17)
 * @param newM_value String
 */
public void setValue(String newValue) {

	m_value = newValue;
}
/**
 * 验证对象各属性之间的数据逻辑正确性。
 *
 * 创建日期：(2001-5-17)
 * @exception nc.vo.pub.ValidationException 如果验证失败，抛出
 *     ValidationException，对错误进行解释。
 */
public void validate() throws ValidationException {

	ArrayList<String> errFields = new ArrayList<String>(); // errFields record those null fields that cannot be null.
	// 检查是否为不允许空的字段赋了空值，你可能需要修改下面的提示信息：
	// construct the exception message:
	StringBuffer message = new StringBuffer();
//	message.append(nc.vo.ml.NCLangRes4VoTransl.getNCLangRes().getStrByID("20060504","UPP20060504-000275")/*@res "下列字段不能为空："*/);
	String msg = "";
	if (errFields.size() > 0) {
		String[] temp = (String[]) errFields.toArray(new String[0]);
		message.append(temp[0]);
		for ( int i= 1; i < temp.length; i++ ) {
			msg+=nc.vo.ml.NCLangRes4VoTransl.getNCLangRes().getStrByID("20060504","UPP20060504-000276");
			msg += temp[i];
		}
		// throw the exception:
		message.append(nc.vo.ml.NCLangRes4VoTransl.getNCLangRes().getStrByID("20060504","UPP20060504-000275",null,new String[]{msg})/*@res "下列字段不能为空："*/);
		throw new NullFieldException(message.toString());
	}
}
}